package cn.zzh.demo.queue.producer;

import com.alibaba.fastjson.JSON;
import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.Producer;
import org.apache.kafka.clients.producer.ProducerRecord;
import org.apache.kafka.clients.producer.RecordMetadata;

import java.util.Properties;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

public class ProducerServer {

    public static void main(String[] args) {



        Properties props = new Properties();
        props.put("bootstrap.servers", "172.17.12.143:9092");
//        props.put("acks", "all");
//        props.put("retries", 0);
//        props.put("batch.size", 16384);
//        props.put("linger.ms", 1);
//        props.put("buffer.memory", 33554432);
        props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");
        props.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");

        String topic = "lz_statagent_info";
        String msg = "2018-06-14 07:05:07.880`postEvent`addr=125.73.220.99, 183.3.229.169`{\"deviceid\":\"99001006090817\",\"appkey\":\"17c554e03c2f5332138af15133abdf9e\",\"userid\":\"2633520661410021420\",\"session\":\"B3B5BF8BAF8449FA97A9E20778E1D9D5\",\"time\":\"2018-06-14 07:05:03.376\",\"eventid\":\"EVNET_DEVICE_INFO_UPLOAD\",\"view\":\".launcher.Launcher\",\"label\":{\"key_version\":4,\"content\":\"\"},\"acc\":1}`header={\"Connection\":\"close\",\"Qvia\":\"7d49dc636c8d4f7288233c98a55d697bb7d4e500\",\"REMOTE_ADD\":\"183.3.229.169\",\"X-Daa-Tunnel\":\"hop_count=2\",\"X-Forwarded-For\":\"125.73.220.99, 183.3.229.169\",\"X-Forwarded-Proto\":\"http\",\"X-NWS-LOG-UUID\":\"34f109c8-52e0-4ab4-82d3-61c65b8b6b04 9367589a0c7f3a1dccc749fc2fcb4e6c\",\"X-Real-IP\":\"183.3.229.169\",\"X-Tencent-Ua\":\"Qcloud\"}";

        Producer<String, String> producer = new KafkaProducer<String, String>(props);
        Future<RecordMetadata> ret = producer.send(new ProducerRecord<String, String>(topic, "1", msg));
        try {
            RecordMetadata recordMetadata = ret.get(10, TimeUnit.SECONDS);
            System.out.println(recordMetadata.offset());
            System.out.println(JSON.toJSONString(recordMetadata));

        } catch (InterruptedException e) {
            e.printStackTrace();
        } catch (ExecutionException e) {
            e.printStackTrace();
        } catch (TimeoutException e) {
            e.printStackTrace();
        }
        producer.close();
    }

    public static void test(String[] args) {


        Properties props = new Properties();
        props.put("bootstrap.servers", "172.17.6.186:9092");
        props.put("acks", "all");
        props.put("retries", 0);
        props.put("batch.size", 16384);
        props.put("linger.ms", 1);
        props.put("buffer.memory", 33554432);
        props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");
        props.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");

        Producer<String, String> producer = new KafkaProducer<String, String>(props);
        for (int i = 0; i < 10; i++) {
            producer.send(new ProducerRecord<String, String>("topic-zzh", Integer.toString(i), Integer.toString(i)));
        }
        producer.close();
    }
}
